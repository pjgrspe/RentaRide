@using RentaRide.Models.Accounts
@model RegistrationModel

<div id="moduleRegistration">
    <div class="d-flex align-items-center justify-content-center">
        <div class="d-flex flex-column col-10">
            @* TITLE AND SUBTEXT *@
            <h1 id="maintext">Register</h1>
            <p class="subtext mb-5">Please provide accurate and complete information.</p>
            @* REGISTRATION FORM *@
            <div class="progress px-1" style="height: 3px;">
                <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
            <div class="step-container d-flex justify-content-between">
                <div class="step-circle text-light" onclick="displayStep(1)">1</div>
                <div class="step-circle text-light" onclick="displayStep(2)">2</div>
                <div class="step-circle text-light" onclick="displayStep(3)">3</div>
                <div class="step-circle text-light" onclick="displayStep(4)">4</div>
            </div>
            @* <form id="multi-step-form"> *@
            @using (Html.BeginForm("Index", "Registration", FormMethod.Post, new { id = "multi-step-form" }))
            {
                <div class="step step-1">
                    <!-- Step 1 form fields here -->
                    <div class="step-1-container d-flex">
                        <h4>Account Details</h4>
                        @* @Html.ValidationSummary(false, "") *@
                    </div>
                    @* EMAIL INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelEmail, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelEmail, new { @class = "form-control", placeholder = "Email", type = "email", id = "inputRegistrationEmail" })
                        @Html.ValidationMessageFor(m => m.regmodelEmail, "", new { @class = "text-danger" })
                    </div>
                    @* USERNAME INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelUsername, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelUsername, new { @class = "form-control", type = "text", id = "inputRegistrationUsername", placeholder = "Username" })
                        @Html.ValidationMessageFor(m => m.regmodelUsername, "", new { @class = "text-danger" })
                    </div>
                    @* PASSWORD INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelPassword, new { @class = "form-label text-start" })
                        @Html.TextBoxFor(m => m.regmodelPassword, new { @class = "form-control", type = "password", id = "inputRegistrationPassword", placeholder = "Password", aria_describedby = "passwordHelpBlock" })
                        @Html.ValidationMessageFor(m => m.regmodelPassword, "", new { @class = "text-danger" })
                    </div>
                    @* REPEAT PASSWORD INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelConfirmPassword, new { @class = "form-label text-start" })
                        @Html.TextBoxFor(m => m.regmodelConfirmPassword, new { @class = "form-control", type = "password", id = "inputRegistrationRePassword", placeholder = "Repeat Password", aria_describedby = "passwordHelpBlock" })
                        @Html.ValidationMessageFor(m => m.regmodelConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    @* CONTINUE BUTTON *@
                    <button type="button" class="btn btn-primary btn-lg mt-4 mb-5 w-100 next-step">CONTINUE</button>
                </div>
                <div class="step step-2">
                    <!-- Step 2 form fields here -->
                    <div class="step-2-container d-flex align-content-center">
                        <button type="button" class="btn btn-md mb-2 me-1 prev-step">
                            <i class="fa-solid fa-arrow-left text-white"></i>
                        </button>
                        <h4 class="mt-1">Basic Info</h4>
                    </div>

                    @* FIRSTNAME INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelFirstName, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelFirstName, new { @class = "form-control", type = "text", id = "inputRegistrationFName", placeholder = "First Name" })
                        @Html.ValidationMessageFor(m => m.regmodelFirstName, "", new { @class = "text-danger" })
                    </div>
                    @* MIDDLENAME INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelMiddleName, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelMiddleName, new { @class = "form-control", type = "text", id = "inputRegistrationMName", placeholder = "Middle Name" })
                        @Html.ValidationMessageFor(m => m.regmodelMiddleName, "", new { @class = "text-danger" })
                    </div>
                    @* LASTNAME INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelLastName, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelLastName, new { @class = "form-control", type = "text", id = "inputRegistrationLName", placeholder = "Last Name" })
                        @Html.ValidationMessageFor(m => m.regmodelLastName, "", new { @class = "text-danger" })
                    </div>
                    @* DOB INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelDOB, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelDOB, new { @class = "form-control", type = "date", id = "inputRegistrationDOB", placeholder = "Date of Birth", max = @DateTime.Now.AddYears(-18).ToString("yyyy - MM - dd") })
                        @Html.ValidationMessageFor(m => m.regmodelDOB, "", new { @class = "text-danger" })
                    </div>
                    @* CONTINUE BUTTON *@
                    <button type="button" class="btn btn-primary btn-lg mt-4 mb-5 w-100 next-step">CONTINUE</button>
                </div>

                <div class="step step-3">
                    <!-- Step 3 form fields here -->
                    <div class="step-3-container d-flex">
                        <button type="button" class="btn btn-md mb-2 me-1 prev-step">
                            <i class="fa-solid fa-arrow-left text-white"></i>
                        </button>
                        <h4 class="mt-1">Address Info</h4>
                    </div>

                    @* STREET ADDRESS INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelStreetAdd, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelStreetAdd, new { @class = "form-control", type = "text", id = "inputRegistrationStreet", placeholder = "Street Address" })
                        @Html.ValidationMessageFor(m => m.regmodelStreetAdd, "", new { @class = "text-danger" })
                    </div>
                    @* CITY INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelCityAdd, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelCityAdd, new { @class = "form-control", type = "text", id = "inputRegistrationCity", placeholder = "Municipality/City" })
                        @Html.ValidationMessageFor(m => m.regmodelCityAdd, "", new { @class = "text-danger" })
                    </div>
                    @* PROVINCE INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelProvinceAdd, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelProvinceAdd, new { @class = "form-control", type = "text", id = "inputRegistrationProvince", placeholder = "Province" })
                        @Html.ValidationMessageFor(m => m.regmodelProvinceAdd, "", new { @class = "text-danger" })
                    </div>
                    @* CONTACT INPUT *@
                    <div class="mb-3 text-start">
                        @Html.LabelFor(m => m.regmodelContact, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.regmodelContact, new { @class = "form-control", type = "text", id = "inputRegistrationContact", placeholder = "Contact" })
                        @Html.ValidationMessageFor(m => m.regmodelContact, "", new { @class = "text-danger" })
                    </div>
                    @* CONTINUE BUTTON *@
                    <button type="button" class="btn btn-primary btn-lg mt-4 mb-5 w-100 next-step">CONTINUE</button>
                </div>
                <div class="step step-4">
                    <!-- Step 4 form fields here -->
                    <div class="step-4-container d-flex">
                        <button type="button" class="btn btn-md mb-2 me-1 prev-step">
                            <i class="fa-solid fa-arrow-left text-white"></i>
                        </button>
                        <h4 class="mt-1">Documents</h4>
                    </div>
                    @* LICENSE INPUT *@
                    <div class="mb-3 text-start">
                        <label for="inputRegistrationLicense" class="form-label">Driver's License</label>
                        <input type="file" class="form-control" id="inputRegistrationLicense" placeholder="Upload Image">
                    </div>
                    @* SECONDARY VALID ID INPUT *@
                    <div class="mb-3 text-start">
                        <label for="inputRegistrationSecondID" class="form-label">Secondary Valid ID</label>
                        <input type="file" class="form-control" id="inputRegistrationSecondID" placeholder="Secondary Valid ID">
                    </div>
                    @* POB INPUT *@
                    <div class="mb-3 text-start">
                        <label for="inputRegistrationPOB" class="form-label">Proof of Billing</label>
                        <input type="file" class="form-control" id="inputRegistrationPOB" placeholder="Proof of Billing">
                    </div>
                    @* SELFIE INPUT *@
                    <div class="mb-3 text-start">
                        <label for="inputRegistrationSelfieID" class="form-label">Selfie with ID</label>
                        <input type="file" class="form-control" id="inputRegistrationSelfieID" placeholder="Selfie with ID">
                    </div>
                    @* SUBMIT BUTTON *@
                    <button type="submit" class="btn btn-success btn-lg mt-4 mb-5 w-100">SUBMIT</button>
                </div>
            }
            @* </form> *@
            @* SUBTEXTS *@
            <p class="subtext">
                By creating an account you agree to our
                <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a>
            </p>
            <p class="subtext">Already have an account? 
                <a asp-area="" asp-controller="Login" asp-action="Index">Sign in</a>
            </p>
        </div>
    </div>
</div>
